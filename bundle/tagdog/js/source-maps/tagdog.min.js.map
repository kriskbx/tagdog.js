{"version":3,"sources":["tagdog.js"],"names":["counter","eventType","window","ontouchend","keyCodes",8,13,188,"arraySlice","Array","prototype","slice","objectToString","Object","toString","getType","obj","call","isString","isHTMLElement","HTMLElement","isNodeList","isArray","toArray","arrayContains","array","value","indexOf","qs","selector","element","document","querySelector","qsa","querySelectorAll","extend","receiver","i","key","emitter","emitters","arguments","n","length","keydownHandler","event","tag","tags","hiddenValue","this","hiddenInput","keyCode","preventDefault","cleanTagName","originalInput","currentTags","addTag","tagContainer","removeTag","clickTagHandler","target","className","parentNode","focus","createElements","options","patterns","regex","tooltipTitle","classList","add","name","getAttribute","createElement","setAttribute","appendChild","insertBefore","addListeners","addEventListener","bind","updateInstance","dummy","dummyValue","split","forEach","removeAttribute","Tagdog","tagName","reduce","pattern","replace","hasTag","textContent","createTag","unsafe","title","tagNode","insertTagElement","duplicates","push","join","trim","removeTagByName","tagElem","splice","removeChild","removed","removeTagByElement","tagElement","getTags","asString","toLower","resetTags","innerHTML","String","toLowerCase","tagdog","field","elements","inst"],"mappings":"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","file":"tagdog.min.js","sourcesContent":["(function() {\n\t\"use strict\";\n\n\t/*\n\t * Private variables.\n\t **/\n\n\tvar counter = 0;\n\n\tvar eventType = window.ontouchend ? 'touchend' : 'click';\n\n\tvar keyCodes = {\n\t\t8: 'backspace',\n\t\t13: 'enter',\n\t\t188: ','\n\t};\n\n\n\t/*\n\t * Mostly private shortcuts and helper functions.\n\t **/\n\n\tvar arraySlice = Array.prototype.slice;\n\t\n\tvar objectToString = Object.prototype.toString;\n\t\n\tvar typeError = function error(message) {\n\t\tthrow new TypeError(message);\n\t};\n\n\tvar getType = function getType(obj) {\n\t\treturn objectToString.call(obj).slice(8, -1);\n\t};\n\n\tvar isString = function isString(obj) {\n\t\treturn getType(obj) === 'String';\n\t};\n\n\tvar isHTMLElement = function isHTMLElement(obj) {\n\t\treturn obj instanceof HTMLElement;\n\t};\n\n\tvar isNodeList = function isNodeList(obj) {\n\t\treturn getType(obj) === 'NodeList';\n\t};\n\n\tvar isArray = function isArray(obj) {\n\t\treturn getType(obj) === 'Array';\n\t};\n\n\tvar isObject = function isObject(obj) {\n\t\treturn getType(obj) === 'Object';\n\t};\n\n\tvar toArray = function toArray(obj) {\n\t\treturn arraySlice.call(obj);\n\t};\n\n\tvar arrayContains = function arrayContains(array, value) {\n\t\treturn array.indexOf(value) > -1;\n\t};\n\n\tvar qs = function qs(selector, element) {\n\t\treturn (element || document).querySelector(selector);\n\t};\n\n\tvar qsa = function qsa(selector, element) {\n\t\treturn (element || document).querySelectorAll(selector);\n\t};\n\t\n\t// A basic extend function always helps making things easier.\n\tvar extend = function extend(receiver /*, emitters */) {\n\t\tvar emitters = arraySlice.call(arguments, 1),\n\t\t\t\tn = emitters.length,\n\t\t\t\ti, key, emitter;\n\t\t\n\t\tif(!n) return receiver;\n\t\t\n\t\tfor(i = 0; i < n; i++) {\n\t\t\temitter = emitters[i];\n\t\t\tfor(key in emitter) {\n\t\t\t\treceiver[key] = emitter[key];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn receiver;\n\t};\n\n\n\t/**\n\t * Event Handlers.\n\t */\n\n\tvar keydownHandler = function keydownHandler(event) {\n\t\tvar hiddenValue = this.hiddenInput.value,\n\t\t\t\tkeyCode = keyCodes[event.keyCode],\n\t\t\t\ttag, tags;\n\n\t\tif(keyCode === 'enter' || keyCode === ',') {\n\t\t\tevent.preventDefault();\n\n\t\t\ttag = this.cleanTagName(this.originalInput.value);\n\n\t\t\tif(tag.length <= 0) return false;\n\n\t\t\tif(!arrayContains(this.currentTags, tag)) {\n\t\t\t\tthis.addTag(tag);\n\t\t\t}\n\t\t}\n\n\t\tif(keyCode === 'backspace' && hiddenValue.length > 0 ) {\n\t\t\tif( this.originalInput.value.length > 0) return false;\n\t\t\ttags = qsa('.tagdog-tag', this.tagContainer);\n\t\t\tthis.removeTag(tags[tags.length - 1]);\n\t\t}\n\t};\n\n\tvar preventDefault = function preventDefault(event) {\n\t\tevent.preventDefault();\n\t};\n\n\tvar clickTagHandler = function clickTagHandler(event) {\n\t\tvar target = event.target;\n\n\t\twhile(target.className !== 'tagdog-tag') {\n\t\t\tif(target === this.tagContainer) return;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\tthis.removeTag(target);\n\t\t\n\t\t// Refocussing makes for a nicer mobile experience.\n\t\tthis.originalInput.focus();\n\t};\n\n\n\t/**\n\t * Private setup functions. Avoid polluting the instance API with\n\t * setup functions that should be called only once. rather call the\n\t * functions from within the constructor.\n\t */\n\n\t// Creates all the needed elements for each instance\n\tvar createElements = function createElements(element, options) {\n\t\t\n\t\tthis.extend = extend;\n\t\t\n\t\toptions = this.extend({\n\t\t\t// Default replacement patterns\n\t\t\tpatterns: [{\n\t\t\t\t// Replace all leading and trailing white-space with the empty String.\n\t\t\t\tregex: /^\\s+|\\s+$/g\n\t\t\t}, {\n\t\t\t\t// Replace everything that does not match this pattern with the empty String.\n\t\t\t\tregex: /[^a-z0-9-]+/gi\n\t\t\t}],\n\t\t\ttooltipTitle: \"Click to delete\"\n\t\t}, options);\n\n\t\tthis.patterns = options.patterns;\n\t\tthis.tooltipTitle = options.tooltipTitle;\n\n\t\t// Assign the Tagdog element and add the actual tagdog CSS class, if not already defined.\n\t\tthis.element = element || qs('.tagdog-field');\n\t\tthis.element.classList.add('tagdog-field');\n\n\t\t// This is where the tags are saved.\n\t\tthis.currentTags = [];\n\n\t\t// originalInput is the provided input field used to enter the tags.\n\t\tthis.originalInput = qs('input', this.element);\n\t\tthis.name = this.originalInput.getAttribute('name') || 'tagdog_' + (++counter);\n\n\t\t// The hidden input field is the actual input field. It receives the name attribute of the dummy input field.\n\t\tthis.hiddenInput = document.createElement('input');\n\t\tthis.hiddenInput.setAttribute('type', 'hidden');\n\t\tthis.hiddenInput.setAttribute('value', '');\n\t\tthis.hiddenInput.setAttribute('name', this.name);\n\n\t\t// This new element contains the visual tags (tag nodes).\n\t\tthis.tagContainer = document.createElement('div');\n\t\tthis.tagContainer.setAttribute('aria-hidden', true);\n\t\tthis.tagContainer.className = 'tagdog-container';\n\n\t\t// Append the new elements.\n\t\tthis.element.appendChild(this.hiddenInput);\n\t\tthis.element.insertBefore(this.tagContainer, this.originalInput);\n\t};\n\n\n\t// Attach all the needed event listeners.\n\tvar addListeners = function addListeners() {\n\t\t// TODO: Implement proper plain text pasting.\n\t\tthis.element.addEventListener('paste', preventDefault, false);\n\n\t\t// Make the dummy input field listen for keystrokes.\n\t\tthis.originalInput.addEventListener('keydown', keydownHandler.bind(this), false);\n\n\t\t// Delegate click/touchend events to the tag Elements.\n\t\tthis.tagContainer.addEventListener(eventType, clickTagHandler.bind(this), false);\n\t};\n\n\n\t// Updates Tagdog instances in case there are predefined tags.\n\tvar updateInstance = function updateInstance() {\n\t\tvar dummy = this.originalInput,\n\t\t\t\tdummyValue = (dummy.getAttribute('value') || \"\").split(',');\n\n\t\tdummyValue.forEach(function addTags(tag) {\n\t\t\tthis.addTag(tag);\n\t\t}, this);\n\n\t\t// We don't need the name attribute.\n\t\tdummy.removeAttribute('name');\n\t};\n\n\n\t/**\n\t * Tagdog constructor.\n\t */\n\tvar Tagdog = function Tagdog(element, options) {\n\t\tif( !(this instanceof Tagdog) ) {\n\t\t\treturn new Tagdog(element, options);\n\t\t}\n\n\t\tcreateElements.call(this, element, options);\n\t\taddListeners.call(this);\n\t\tupdateInstance.call(this);\n\t};\n\n\n\t/**\n\t * Tagdog prototype functions.\n\t */\n\n\t// Cleans tag names of unwanted characters.\n\tTagdog.prototype.cleanTagName = function cleanTagName(tagName) {\n\t\treturn this.patterns.reduce(function(tagName, pattern) {\n\t\t\treturn tagName.replace(pattern.regex, pattern.replace);\n\t\t}, tagName);\n\t};\n\n\n\t// Checks whether a tag already exists.\n\tTagdog.prototype.hasTag = function hasTag(tag) {\n\t\tvar tagName = typeof tag === 'object' ? tag.textContent : tag;\n\t\treturn arrayContains(this.currentTags, tagName);\n\t};\n\n\n\t// Creates and returns new tag element.\n\tTagdog.prototype.createTag = function createTag(tagName, unsafe) {\n\t\tvar title = unsafe ? tagName : this.cleanTagName(tagName),\n\t\t\t\ttagNode = document.createElement('span');\n\n\t\ttagNode.textContent = title;\n\t\ttagNode.setAttribute('aria-hidden', true);\n\t\ttagNode.setAttribute('role', 'button');\n\t\ttagNode.setAttribute('data-title', this.tooltipTitle);\n\t\ttagNode.className = \"tagdog-tag\";\n\n\t\treturn tagNode;\n\t};\n\n\n\t// Adds a new tag element to the current Tagdog instance.\n\tTagdog.prototype.insertTagElement = function insertTagElement(tag, duplicates) {\n\t\tif(!duplicates && this.hasTag(tag.textContent)) return null;\n\n\t\ttag.classList.add('tagdog-tag');\n\n\t\tthis.currentTags.push(tag.textContent);\n\t\tthis.tagContainer.appendChild(tag);\n\t\tthis.hiddenInput.value = this.currentTags.join(',');\n\t\tthis.originalInput.value = '';\n\n\t\treturn tag;\n\t};\n\n\n\t// Adds a new tag to the current Tagdog instance.\n\tTagdog.prototype.addTag = function addTag(tagName) {\n\t\tif(!isString(tagName) || !tagName.trim() || this.hasTag(tagName)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.insertTagElement(this.createTag(tagName));\n\t};\n\n\n\t// Removes a tag based on its title (tag name).\n\tTagdog.prototype.removeTagByName = function removeTagByName(tagName) {\n\t\tvar tags = toArray(qsa('.tagdog-tag', this.tagContainer)),\n\t\t\t\tn = tags.length,\n\t\t\t\ttagElem, tag;\n\n\t\tthis.currentTags.splice(this.currentTags.indexOf(tagName), 1);\n\t\tthis.hiddenInput.value = this.currentTags.join(\",\");\n\n\t\twhile(n > 0) {\n\t\t\ttagElem = tags[--n];\n\t\t\tif(tagElem.textContent === tag) {\n\t\t\t\ttag = this.tagContainer.removeChild(tagElem);\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\n\n\t//Removes a tag element.\n\tTagdog.prototype.removeTagByElement = function removeTagByElement(tagElement) {\n\t\tthis.currentTags.splice(this.currentTags.indexOf(tagElement.textContent), 1);\n\t\tthis.hiddenInput.value = this.currentTags.join(\",\");\n\t\tvar tag = this.tagContainer.removeChild(tagElement);\n\n\t\treturn tag;\n\t};\n\n\n\t// Removes a tag and returns it.\n\tTagdog.prototype.removeTag = function removeTag(tag) {\n\t\treturn (typeof tag === 'string') ? this.removeTagByName(tag) : this.removeTagByElement(tag);\n\t};\n\n\n\t// Returns an Array with all current tag names.\n\tTagdog.prototype.getTags = function getTags(asString) {\n\t\treturn !asString ? this.currentTags : this.toLower(this.currentTags);\n\t};\n\n\n\t// Resets the Tagdog instance.\n\tTagdog.prototype.resetTags = function reset() {\n\t\tthis.originalInput.setAttribute('value', '');\n\t\tthis.hiddenInput.setAttribute('value', '');\n\t\tthis.tagContainer.innerHTML = \"\";\n\t\tthis.currentTags.splice(0, this.currentTags.length);\n\t};\n\n\n\t// Converts a value to a String first and then to lower case, so we can\n\t// simply convert the whole currentTags Array to a lower case String.\n\tTagdog.prototype.toLower = function toLower(value) {\n\t\tif(!isString(value) && !isArray(value)) return '';\n\t\treturn String(value).toLowerCase();\n\t};\n\n\t// Checks, whether the provided value is an HTMLElement.\n\tTagdog.prototype.isHTMLElement = isHTMLElement;\n\n\n\t// Checks, whether the provided value is a NodeList.\n\tTagdog.prototype.isNodeList = isNodeList;\n\n\n\n\t/*\n\t * The namespace is a decorator function. You can provide either a\n\t * CSS selector, an HTMLElement, a NodeList or nothing. The return\n\t * value will either be a single Tagdog instance or an Object which\n\t * property names are the name attributes of the input fields inside\n\t * the respective selected elements. If no field param is provided\n\t * the function will simply return instances for all elements that\n\t * match the selector `.tagdog-field`. No matches will result in a\n\t * return value of `null`.\n\t **/\n\tthis.tagdog = function tagdog(field, options) {\n\t\t// If `field` is falsy, simply call tagdog again\n\t\t// recursively and pass the default Tagdog selector.\n\t\tif(!field) {\n\t\t\treturn tagdog('.tagdog-field', options);\n\t\t}\n\n\t\t// If `field` is an HTMLElelent, return a single instance.\n\t\tif(isHTMLElement(field)) {\n\t\t\treturn new Tagdog(field, options);\n\t\t}\n\n\t\t// If `field` is a String, it's assumed it's a CSS selector.\n\t\t// Try to match as many elements as possible. If there is no\n\t\t// match, return `null`. If there is one match call tagdog\n\t\t// recursively and pass the HTMLElement so that tagdog can\n\t\t// return a single instance. If there are two or more matches\n\t\t// do the same, but provide the whole NodeList.\n\t\tif(isString(field)) {\n\t\t\tvar elements = qsa(field),\n\t\t\t\t\tn = elements.length;\n\n\t\t\tif(!n) return null;\n\n\t\t\treturn n > 1 ? tagdog(elements, options) : tagdog(elements[0], options);\n\t\t}\n\n\t\t// If `field` is a NodeList return an Object of Tagdog instances.\n\t\tif(isNodeList(field)) {\n\t\t\tfield = toArray(field);\n\t\t\treturn field.reduce(function(obj, element) {\n\t\t\t\tvar inst = tagdog(element, options);\n\t\t\t\tobj[inst.name] = inst;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\t\t}\n\t};\n\n}).call(this);\n"],"sourceRoot":"/source/"}